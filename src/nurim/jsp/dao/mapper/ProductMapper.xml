<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.og/dtd/mybatis-3-mapper.dtd">

<!-- 이 파일의 경로를 config.xml에 명시해야 한다. -->

<!--회원에 대한 CRUD -->
<mapper namespace="ProductMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="product" type="nurim.jsp.model.Product">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="id" column="id" />
		<result property="documentId" column="document_id" />
		<result property="proImg" column="pro_img" />
		<result property="proName" column="pro_name" />
		<result property="category" column="category" />
		<result property="proPrice" column="pro_price" />
		<result property="amount" column="amount" />
		<result property="proHit" column="pro_hit" />
		<result property="regDate" column="reg_date" />
		<result property="editDate" column="edit_date"/>
		<result property="provider" column="provider" />
		<result property="content" column="content" />
		<result property="proCategoryName" column="pro_category_name" />
	</resultMap>
	
	<!-- 관리자용 상품 리스트 수 검색 -->
	<select id="selectProductCount" parameterType="nurim.jsp.model.Product"
	resultType="int">
	SELECT COUNT(id) FROM Product
	</select>
	
	<!-- 서비스용 상품 리스트 수 검색 -->
	<select id="selectProductCategoryCount" parameterType="nurim.jsp.model.Product"
	resultType="int">
	SELECT COUNT(b.id) FROM Product b
	INNER JOIN pro_category a ON b.id=a.product_id
	INNER JOIN category c ON a.category_id=c.id
	<where>
	c.pro_category_name=#{proCategoryName}
		<if test="proName != null or provider != null">
			AND(
			<if test="proName !=null">
				pro_name LIKE concat('%',#{proName},'%')
			</if>
			<if test="provider !=null">
				OR provider LIKE concat('%',#{provider},'%')
			</if>
					)
		</if>
	</where>
	</select>
	
	<!-- 관리자용 상품 리스트 출력 -->
	<select id="selectProductList" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT b.id, c.pro_category_name, b.pro_name, a.id, a.product_id, a.category_id,
	b.pro_img, b.pro_price, b.amount, b.reg_date
	FROM product b
	INNER JOIN pro_category a ON b.id=a.product_id
	INNER JOIN category c ON a.category_id=c.id
	ORDER BY b.id DESC
	LIMIT #{limitStart},#{listCount}
	</select>
	
	<!--사용자용 상품 리스트 출력 -->
	<select id="selectProductCategoryList" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT c.pro_category_name, b.pro_name, a.id, a.product_id, a.category_id,
	b.pro_img, b.pro_price, b.amount, b.reg_date, b.provider
	FROM product b
	INNER JOIN pro_category a ON b.id=a.product_id
	INNER JOIN category c ON a.category_id=c.id
	<where>
	c.pro_category_name=#{proCategoryName}
		<if test="proName != null or provider != null">
			AND(
			<if test="proName !=null">
				b.pro_name LIKE concat('%',#{proName},'%')
			</if>
			<if test="provider !=null">
				OR provider LIKE concat('%',#{provider},'%')
			</if>
					)
		</if>
	</where>
	ORDER BY b.reg_date DESC
	LIMIT #{limitStart},#{listCount}
	</select>
	
	<!-- 상품 등록 -->
	<insert id="insertProduct" parameterType="nurim.jsp.model.Product"
	useGeneratedKeys="true" keyProperty="id">
	INSERT INTO product(
	pro_img, pro_name, pro_price, amount, pro_hit,
	reg_date, edit_date, provider, content)
	VALUES(
	#{proImg},#{proName},#{proPrice},#{amount},0,
	now(),now(),#{provider},#{content}
	)
	</insert>
	
		<!-- 상품 선택 -->
	<select id="selectProduct" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT b.id, c.pro_category_name, b.pro_name, a.id, a.product_id, a.category_id,
	b.pro_img, b.pro_price, b.amount, b.reg_date
	FROM product b
	INNER JOIN pro_category a ON b.id=a.product_id
	INNER JOIN category c ON a.category_id=c.id
	</select>
	
	
	<delete id="deleteProduct"  parameterType="nurim.jsp.model.Product">
	DELETE FROM product WHERE id=#{id}
	</delete>
</mapper>
