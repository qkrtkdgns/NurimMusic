<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.og/dtd/mybatis-3-mapper.dtd">

<!-- 이 파일의 경로를 config.xml에 명시해야 한다. -->

<!--회원에 대한 CRUD -->
<mapper namespace="ProductMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="product" type="nurim.jsp.model.Product">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="id" column="id" />
		<result property="documentId" column="document_id" />
		<result property="proImg" column="pro_img" />
		<result property="proName" column="pro_name" />
		<result property="category" column="category" />
		<result property="proPrice" column="pro_price" />
		<result property="amount" column="amount" />
		<result property="proHit" column="pro_hit" />
		<result property="regDate" column="reg_date" />
		<result property="editDate" column="edit_date"/>
		<result property="provider" column="provider" />
		<result property="content" column="content" />
		<result property="proCategoryName" column="pro_category_name" />
	</resultMap>
	
	<!-- 관리자용 상품 리스트 수 검색 -->
	<select id="selectProductCount" parameterType="nurim.jsp.model.Product"
	resultType="int">
	SELECT COUNT(id) FROM Product
	</select>
	
	<!-- 서비스용 상품 리스트 수 검색 -->
	<select id="selectProductCategoryCount" parameterType="nurim.jsp.model.Product"
	resultType="int">
	SELECT COUNT(b.id) FROM Product b
	INNER JOIN pro_category a ON b.id=a.product_id
	INNER JOIN category c ON a.category_id=c.id
	<where>
	c.pro_category_name=#{proCategoryName}
		<if test="proName != null or provider != null">
			AND
		<if test="proName !=null">
				b.pro_name LIKE concat('%',#{proName},'%')
						<if test="CList == 'Reg'">
						ORDER BY b.reg_date DESC
						</if>
						<if test="CList == 'high'">
						ORDER BY b.pro_price DESC
						</if>
						<if test="CList == 'row'">
						ORDER BY b.pro_price ASC
						</if>

			</if>
			<if test="provider !=null">
				provider LIKE concat('%',#{provider},'%')
						<if test="CList == 'Reg'">
						ORDER BY b.reg_date DESC
						</if>
						<if test="CList == 'high'">
						ORDER BY b.pro_price DESC
						</if>
						<if test="CList == 'row'">
						ORDER BY b.pro_price ASC
						</if>
			</if>
		</if>
		<if test="proName == null and provider == null">
				<if test="CList == 'Reg'">
						ORDER BY b.reg_date DESC
				</if>
				<if test="CList == 'high'">
						ORDER BY b.pro_price DESC
				</if>
				<if test="CList == 'row'">
						ORDER BY b.pro_price ASC
				</if>
				<if test="CList == null">
						ORDER BY b.reg_date DESC
				</if>
				
		</if>
	</where>
	</select>
	
	<!-- 관리자용 상품 리스트 출력 -->
	<select id="selectProductList" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT b.id, c.pro_category_name, b.pro_name, a.id, a.product_id, a.category_id,
	b.pro_img, b.pro_price, b.amount, b.reg_date
	FROM product b
	INNER JOIN pro_category a ON b.id=a.product_id
	INNER JOIN category c ON a.category_id=c.id
	ORDER BY b.id DESC
	LIMIT #{limitStart},#{listCount}
	</select>
	
	<!--사용자용 상품 리스트 출력 -->
	<select id="selectProductCategoryList" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT c.pro_category_name, b.pro_name, b.id, a.product_id, a.category_id,
	b.pro_img, b.pro_price, b.amount, b.reg_date, b.provider
	FROM product b
	INNER JOIN pro_category a ON b.id=a.product_id
	INNER JOIN category c ON a.category_id=c.id
	<where>
		c.pro_category_name=#{proCategoryName}
<if test="proName != null or provider != null">
			AND
		<if test="proName !=null">
				b.pro_name LIKE concat('%',#{proName},'%')
						<if test="CList == 'Reg'">
						ORDER BY b.reg_date DESC
						</if>
						<if test="CList == 'high'">
						ORDER BY b.pro_price DESC
						</if>
						<if test="CList == 'row'">
						ORDER BY b.pro_price ASC
						</if>

			</if>
			<if test="provider !=null">
				provider LIKE concat('%',#{provider},'%')
						
						<if test="CList == 'Reg'">
						ORDER BY b.reg_date DESC
						</if>
						<if test="CList == 'high'">
						ORDER BY b.pro_price DESC
						</if>
						<if test="CList == 'row'">
						ORDER BY b.pro_price ASC
						</if>
			</if>
					
		</if>
		<if test="proName == null and provider == null">
				<if test="CList == 'Reg'">
						ORDER BY b.reg_date DESC
				</if>
				<if test="CList == 'high'">
						ORDER BY b.pro_price DESC
				</if>
				<if test="CList == 'row'">
						ORDER BY b.pro_price ASC
				</if>
				<if test="CList == null">
						ORDER BY b.reg_date DESC
				</if>
				
		</if>
</where>
	LIMIT #{limitStart},#{listCount}
	</select>
	

<!--전체 검색 상품 리스트 카운트 -->
	<select id="selectProductSearchListCount" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT COUNT(b.id) FROM Product b
	INNER JOIN pro_category a ON b.id=a.product_id
	INNER JOIN category c ON a.category_id=c.id
<where>
		c.pro_category_name=#{proCategoryName}
	<if test="proName != null or provider != null">
			AND(
		<if test="proName !=null">
				b.pro_name LIKE concat('%',#{proName},'%')
			</if>
			<if test="provider !=null">
				OR provider LIKE concat('%',#{provider},'%')
			</if>
			)
	</if>
</where>
</select>



<!--전체 검색 상품 리스트 출력 -->
	<select id="selectProductSearchList" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT c.pro_category_name, b.pro_name, b.id, a.product_id, a.category_id,
	b.pro_img, b.pro_price, b.amount, b.reg_date, b.provider
	FROM product b
	INNER JOIN pro_category a ON b.id=a.product_id
	INNER JOIN category c ON a.category_id=c.id
<where>
		c.pro_category_name=#{proCategoryName}
	<if test="proName != null or provider != null">
			AND
		<if test="proName !=null">
				b.pro_name LIKE concat('%',#{proName},'%')

			</if>
			<if test="provider !=null">
				provider LIKE concat('%',#{provider},'%')
				
			</if>
	
		</if>
</where>
ORDER BY b.reg_date DESC
<!-- LIMIT #{limitStart},#{listCount} -->
</select>


	
	
	<!-- 상품 등록 -->
	<insert id="insertProduct" parameterType="nurim.jsp.model.Product"
	useGeneratedKeys="true" keyProperty="id">
	INSERT INTO product(
	pro_img, pro_name, pro_price, amount, pro_hit,
	reg_date, edit_date, provider, content)
	VALUES(
	#{proImg},#{proName},#{proPrice},#{amount},0,
	now(),now(),#{provider},#{content}
	)
	</insert>
	
		<!-- 상품 선택 -->
	<select id="selectProduct" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT b.id, c.pro_category_name, b.pro_name, a.id, a.product_id, a.category_id,
	b.pro_img, b.pro_price, b.amount, b.reg_date, b.provider, b.content, b.pro_hit, b.reg_date
	FROM product b
	INNER JOIN pro_category a ON b.id=a.product_id
	INNER JOIN category c ON a.category_id=c.id
	WHERE b.id=#{id}
	</select>
	
	<!-- 상품 수정 -->
	<update id="updateProduct" parameterType="nurim.jsp.model.Product" >
	UPDATE product SET pro_name=#{proName}, pro_img=#{proImg}, pro_price=#{proPrice},
	amount=#{amount},content=#{content}, provider=#{provider},
	reg_date=#{regDate}, edit_date=now()
	WHERE id=#{id}
	</update>
	
	<!--  상품 삭제 -->
	<delete id="deleteProduct"  parameterType="nurim.jsp.model.Product">
	DELETE FROM product WHERE id=#{id}
	</delete>
	<!-- 이미지 경로 추적(삭제)-->
	<select id="selectImg" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT pro_img FROM product WHERE id=#{id}
	</select>
	
	<!-- 이전 상품 -->
	<select id="selectPrevProduct" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT b.id, c.pro_category_name, b.pro_name, b.id, a.product_id, a.category_id,
	b.pro_img, b.pro_price, b.amount, b.reg_date, b.provider, b.content, b.pro_hit, b.reg_date
	FROM product b
	INNER JOIN pro_category a ON b.id=a.product_id
	INNER JOIN category c ON a.category_id=c.id
	WHERE  c.pro_category_name=#{proCategoryName} AND b.id&lt;#{id}
	ORDER BY b.reg_date DESC
	LIMIT 0,1
	</select>
	
		<!-- 다음 상품 -->
	<select id="selectNextProduct" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT b.id, c.pro_category_name, b.pro_name, b.id, a.product_id, a.category_id,
	b.pro_img, b.pro_price, b.amount, b.reg_date, b.provider, b.content, b.pro_hit, b.reg_date
	FROM product b
	INNER JOIN pro_category a ON b.id=a.product_id
	INNER JOIN category c ON a.category_id=c.id
	WHERE c.pro_category_name=#{proCategoryName} AND b.id&gt;#{id} 
	ORDER BY b.reg_date ASC
	LIMIT 0,1
	</select>
	

	
	<!-- 조회수 증가 -->
	<update id="updateProductHit" parameterType="nurim.jsp.model.Product">
		UPDATE product SET pro_hit=pro_hit+1 WHERE id=#{id}
	</update>
	
	<!-- BestItem 검색 -->
	<select id="selectProductBestItemList" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT 
	p.id, p.pro_img, p.pro_name, p.pro_price, p.amount,p. pro_hit, pro_category_name,
	p.reg_date, p.edit_date, p.provider, p.content
	FROM product as p 
	INNER JOIN pro_category ON p.id = pro_category.product_id
	INNER JOIN category ON pro_category.category_id = category.id	
	ORDER BY p.amount asc
	LIMIT 0,12
	</select>
	<!-- NewItem 검색 -->
	<select id="selectProductNewItemList" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT 
	p.id, p.pro_img, p.pro_name, p.pro_price, p.amount,p. pro_hit, pro_category_name,
	p.reg_date, p.edit_date, p.provider, p.content
	FROM product as p 
	INNER JOIN pro_category ON p.id = pro_category.product_id
	INNER JOIN category ON pro_category.category_id = category.id	
	ORDER BY p.edit_date desc
	LIMIT 0,15
	</select>
	<!-- MDItem 검색 -->	
	<select id="selectProductMDItemList" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT 
	p.id, p.pro_img, p.pro_name, p.pro_price, p.amount,p. pro_hit, pro_category_name,
	p.reg_date, p.edit_date, p.provider, p.content
	FROM product as p 
	INNER JOIN pro_category ON p.id = pro_category.product_id
	INNER JOIN category ON pro_category.category_id = category.id	
	WHERE p.id=ANY(SELECT product_id FROM pro_category where category_id="7" OR category_id="8")
	ORDER BY amount desc
	LIMIT 0,5
	</select>
	
	<!-- KorItem 검색 -->	
	<select id="selectProductKorNewItemList" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT 
	p.id, p.pro_img, p.pro_name, p.pro_price, p.amount,p. pro_hit, pro_category_name,
	p.reg_date, p.edit_date, p.provider, p.content
	FROM product as p 
	INNER JOIN pro_category ON p.id = pro_category.product_id
	INNER JOIN category ON pro_category.category_id = category.id	
	WHERE p.id=ANY(SELECT product_id FROM pro_category where category_id="1" OR category_id="2" OR category_id="3")
	ORDER BY p.edit_date desc
	LIMIT 0,15
	</select>
		
	<!-- Foreign 검색 -->
	<select id="selectProductForeignNewItemList" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT 
	p.id, p.pro_img, p.pro_name, p.pro_price, p.amount,p. pro_hit, pro_category_name,
	p.reg_date, p.edit_date, p.provider, p.content
	FROM product as p 
	INNER JOIN pro_category ON p.id = pro_category.product_id
	INNER JOIN category ON pro_category.category_id = category.id	
	WHERE p.id=ANY(SELECT product_id FROM pro_category where category_id="4" OR category_id="5" OR category_id="6")
	ORDER BY p.edit_date desc
	LIMIT 0,15
	</select>
	
	<!-- Shopping 검색 -->
	<select id="selectProductShoppingNewItemList" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT 
	a.id, a.pro_img, a.pro_name, a.pro_price, a.amount, a.pro_hit,
	a.reg_date, a.edit_date, a.provider, a.content, c.pro_category_name
	FROM product a
	INNER JOIN pro_category b ON a.id=b.product_id
	INNER JOIN category c ON b.category_id=c.id
	WHERE a.id=ANY(SELECT product_id FROM pro_category where category_id="7" OR category_id="8")
	ORDER BY a.edit_date desc
	LIMIT 0,5
	</select>
	
	<!--  HOT Item 검색 -->
	<select id="selectProductHOTItemList" parameterType="nurim.jsp.model.Product"
	resultMap="product">
	SELECT 
	a.id, a.pro_img, a.pro_name, a.pro_price, a.amount, a.pro_hit,
	a.reg_date, a.edit_date, a.provider, a.content, c.pro_category_name
	FROM product a
	INNER JOIN pro_category b ON a.id=b.product_id
	INNER JOIN category c ON b.category_id=c.id
	WHERE a.id=ANY(SELECT product_id FROM pro_category where category_id="7" OR category_id="8")
	ORDER BY a.pro_hit desc
	LIMIT 0,5
	</select>
</mapper>
